import requests
import telebot
import config
from telebot import types

bot = telebot.TeleBot(config.TOKEN)
flag = True


@bot.message_handler(commands=['start'])
def welcome(message):
    stick = open('stickers/welcome.webp', 'rb')
    bot.send_sticker(message.chat.id, stick)

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–°–µ–π—á–∞—Å")
    item2 = types.KeyboardButton("–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞...")

    markup.add(item1, item2)

    bot.send_message(message.chat.id,
                     '–ü—Ä–∏–≤–µ—Ç, <b>{0.first_name}</b>!\n–Ø –º–æ–≥—É –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å —Ç–µ–±–µ –ø–æ–≥–æ–¥—É –≤ –ª—é–±–æ–π —Ç–æ—á–∫–µ –º–∏—Ä–∞. –¢–æ–ª—å–∫–æ —Å–∫–∞–∂–∏, –Ω–∞ —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ !'.format(
                         message.from_user),
                     parse_mode='html', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def get_weather_info(message):
    global flag
    if message.text == '–°–µ–π—á–∞—Å':
        flag = True
        bot.send_message(message.chat.id, '–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ —Ç—ã —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É?')
    elif message.text == '–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞...':
        bot.send_message(message.chat.id, '–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ —Ç—ã —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É? –í–æ —Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤?')
        flag = False
    else:
        stick = open('stickers/funny_delay.webp', 'rb')
        bot.send_sticker(message.chat.id, stick)
        markup = types.InlineKeyboardMarkup(row_width=2)
        item1 = types.InlineKeyboardButton("Thanks <3", callback_data='good')
        item2 = types.InlineKeyboardButton("://", callback_data='bad')

        markup.add(item1, item2)
        if flag:
            bot.send_message(message.chat.id, get_current_weather(message.text.split(sep=',. ')[0]),
                             reply_markup=markup)
        else:
            city, hour = message.text.split(sep=', ')
            hour = hour.split(sep='.')[0]
            bot.send_message(message.chat.id, get_weather_forecast(city, hour), reply_markup=markup)


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.data == 'good':
            bot.send_message(call.message.chat.id, '–ù–µ—Ç –ø—Ä–æ–±–ª–µ–º! üòä')
        else:
            bot.send_message(call.message.chat.id, '–ü–æ—á–µ–º—É —Ç—ã —Ç–∞–∫ —Å–æ –º–Ω–æ–π, —á–µ–ª–æ–≤–µ–∫.. üò¢')
    # bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='Thanks <3',
    #                       reply_markup=None)

    # bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
    #                           text="It is test notice!!11")
    except Exception as e:
        print(repr(e))


def get_current_weather(city):
    config.params['q'] = city
    res = requests.get(config.current_url, params=config.params)
    if res.status_code == 200:
        data = res.json()['current']
        template = '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –≥–æ—Ä–æ–¥–µ {} —Å–µ–π—á–∞—Å --  {}¬∞C. {}. –î–∞–≤–ª–µ–Ω–∏–µ - {} –º–º.—Ä—Ç.—Å—Ç. –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ - {} –º/—Å'
        return template.format(city, data["temp_c"], data["condition"]['text'],
                               str(int(float(data['pressure_mb']) * 0.750062)),
                               str(int(float(data['wind_kph']) * 0.277)))
    else:
        return '–ì–æ—Ä–æ–¥ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω :('


def get_weather_forecast(city, hour):
    config.params['q'] = city
    config.params['hour'] = hour
    res = requests.get(config.forecast_url, params=config.params)

    if res.status_code == 200:
        data = res.json()['forecast']['forecastday'][0]['hour'][0]
        city = city[0: -1] + 'e'
        template = '{} –≤ {} –æ–∂–∏–¥–∞–µ—Ç—Å—è {} ¬∞C. {}. –î–∞–≤–ª–µ–Ω–∏–µ - {} –º–º.—Ä—Ç.—Å—Ç. –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ - {} –º/—Å'
        return template.format(data['time'], city, data["temp_c"], data["condition"]['text'],
                               str(int(float(data['pressure_mb']) * 0.750062)),
                               str(int(float(data['wind_kph']) * 0.277)))
    else:
        return '–ù–µ –≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω—ã –≥–æ—Ä–æ–¥ –∏–ª–∏ –≤—Ä–µ–º—è :('


bot.polling(none_stop=True)
